name: 'Terraform'

on:
  push:
    branches:
    - main
  pull_request:

jobs:
  terraform:
    name: ${{ matrix.name }}
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: terraform/${{ matrix.env }}
    
    env:
      TF_VAR_cf_user:                   ${{ secrets[matrix.cf_user] }}
      TF_VAR_cf_password:               ${{ secrets[matrix.cf_password] }}
      AWS_ACCESS_KEY_ID:                ${{ secrets.BACKEND_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY:            ${{ secrets.BACKEND_AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION:               ${{ secrets.BACKEND_AWS_DEFAULT_REGION }}
      TF_VAR_aws_access_key_commercial: ${{ secrets.TF_VAR_AWS_ACCESS_KEY_COMMERCIAL }}
      TF_VAR_aws_secret_key_commercial: ${{ secrets.TF_VAR_AWS_SECRET_KEY_COMMERCIAL }}
      TF_VAR_aws_access_key_govcloud:   ${{ secrets.TF_VAR_AWS_ACCESS_KEY_GOVCLOUD }}
      TF_VAR_aws_secret_key_govcloud:   ${{ secrets.TF_VAR_AWS_SECRET_KEY_GOVCLOUD }}
      TF_VAR_circleci_api_key:          ${{ secrets.TF_VAR_CIRCLECI_API_KEY }}

    strategy:
      matrix:
        env: [staging]
        include:
          - env: staging
            name: Staging
            cf_user: CF_USER_STAGING
            cf_password: CF_PASSWORD_STAGING

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 0.13.2

    - name: Terraform Init
      id: init
      run: terraform init -input=false

    - name: Terraform Format
      id: format
      run: terraform fmt -check

    - name: Terraform Plan
      id: plan
      run: terraform plan -input=false -no-color

    - name: Create Plan Comment
      uses: actions/github-script@0.9.0
      if: github.event_name == 'pull_request'
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const displayOutcome = outcome => outcome === 'success' ? '✅': '❌';

          const output = `
            ## *${{ matrix.name }}* Terraform
            #### Format: ${displayOutcome('${{ steps.format.outcome }}')}
            #### Init:   ${displayOutcome('${{ steps.init.outcome }}')}
            #### Plan:   ${displayOutcome('${{ steps.plan.outcome }}')}

            <details><summary>Show Plan</summary>

            \`\`\`diff
            ${{ steps.plan.outputs.stdout }}
            \`\`\`
            </details>            
          `;

          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          });

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -input=false -auto-approve
