name: 'Terraform'

on:
  push:
    branches:
    - master
  pull_request:

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: dev

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
    
    - name: Install Cloud Foundry Terraform Provider
      run: |
        wget \
          -q -O tmp.zip \
          https://github.com/cloudfoundry-community/terraform-provider-cf/releases/download/v0.12.0/terraform-provider-cloudfoundry_linux_amd64.zip \
        && mkdir -p $HOME/.terraform.d/plugins/linux_amd64 \
        && unzip tmp.zip terraform-provider-cloudfoundry -d $HOME/.terraform.d/plugins/linux_amd64 \
        && rm tmp.zip

    - name: Terraform Init
      run: terraform init
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.DEV_ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.DEV_SECRET_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.DEV_REGION }}

    - name: Terraform Format
      run: terraform fmt -check
  
    - name: Terraform Plan
      run: terraform plan
      env:
        AWS_DEFAULT_REGION: ${{ secrets.DEV_REGION }}
        TF_VAR_access_key: ${{ secrets.DEV_ACCESS_KEY }}
        TF_VAR_secret_key: ${{ secrets.DEV_SECRET_KEY }}
        TF_VAR_region: ${{ secrets.DEV_REGION }}
        TF_VAR_cf_user: ${{ secrets.DEV_CF_USER }}
        TF_VAR_cf_password: ${{ secrets.DEV_CF_PASSWORD }}
        TF_VAR_uev_key: ${{ secrets.DEV_UEV_KEY }}

    # - name: Terraform Apply
    #   if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    #   run: terraform apply -auto-approve