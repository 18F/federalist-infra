name: 'Terraform'

on:
  push:
    branches:
    - main
  pull_request:

jobs:
  terraform:
    name: ${{ matrix.name }}
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: terraform/${{ matrix.env }}
    
    env:
      AWS_ACCESS_KEY_ID:     ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION:    ${{ secrets.AWS_DEFAULT_REGION }}
      TF_VAR_access_key:     ${{ secrets[matrix.access_key] }}
      TF_VAR_secret_key:     ${{ secrets[matrix.secret_key] }}
      TF_VAR_region:         ${{ secrets[matrix.region] }}
      TF_VAR_cf_user:        ${{ secrets[matrix.cf_user] }}
      TF_VAR_cf_password:    ${{ secrets[matrix.cf_password] }}

    strategy:
      matrix:
        env: [global, staging]
        include:
          - env: global
            name: Global
            access_key: AWS_ACCESS_KEY_ID
            secret_key: AWS_SECRET_ACCESS_KEY
            region: AWS_DEFAULT_REGION
          - env: staging
            name: Staging
            access_key: AWS_ACCESS_KEY_ID_STAGING
            secret_key: AWS_SECRET_ACCESS_KEY_STAGING
            region: AWS_DEFAULT_REGION_STAGING
            cf_user: CF_USER_STAGING
            cf_password: CF_PASSWORD_STAGING

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 0.13.2

    - name: Terraform Init
      id: init
      run: terraform init -input=false

    - name: Terraform Format
      id: format
      run: terraform fmt -check

    - name: Terraform Plan
      id: plan
      run: terraform plan -input=false -no-color

    - name: Create Plan Comment
      uses: actions/github-script@0.9.0
      if: github.event_name == 'pull_request'
      env:
        PLAN: "```${{ steps.plan.outputs.stdout }}```"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          require(`${process.env.GITHUB_WORKSPACE}/scripts/terraform-pr-output.js`)(github, context)

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -input=false -auto-approve
